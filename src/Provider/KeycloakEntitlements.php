<?php
/**
 * Created by IntelliJ IDEA.
 * User: jgreen
 * Date: 11/08/2017
 * Time: 2:16 PM
 */

namespace Stevenmaguire\OAuth2\Client\Provider;

/**
 * Class KeycloakEntitlements
 *
 * Represents the result of a response from the Keycloak Entitlement API.
 *
 * @package Stevenmaguire\OAuth2\Client\Provider
 */
class KeycloakEntitlements
{

    private $data;

    /**
     * KeycloakEntitlements constructor.
     * @param object $resultOfJwtDecode
     */
    public function __construct($resultOfJwtDecode)
    {
        $this->data = $resultOfJwtDecode;
    }

    /**
     * Basic checks should there be data that can be examined.
     *
     * @return bool
     */
    public function isValid() {
       return !$this->hasExpired() &&
           ($this->getNotBefore() != null && time() > $this->getNotBefore());
    }

    /**
     *
     * @return bool
     */
    public function hasExpired() {
        return isset($this->data->exp) && time() > $this->data->exp;
    }

    /**
     * Used to check age - may return null or a timestamp
     *
     * @return mixed null|timestamp when token was issued, if present
     */
    public function getIssuedAt() {
        return $this->data->iat;
    }

    /**
     * @return mixed null|timestamp
     */
    public function getNotBefore() {
        return $this->data->nbf;
    }

    /**
     * Check for permission on a resource by the resource's ID
     *
     * @param string $id Resource Set ID - this should be the UUID generated by Keycloak for your resource
     * @return bool
     */
    public function hasResourceSetId($id) {
        if (! isset($this->data->authorizations->permissions)) {
            return false;
        }

        foreach ($this->data->authorization->permissions as $permission) {
            if ($permission->resource_set_id == $id) {
                return true;
            }
        }

        return false;
    }

    /**
     * Check for permission on a resource by the resource's name
     *
     * @param string $name Resource Set ID - this should be the name provided for the resource within Keycloak
     * @return bool
     */
    public function hasResourceSetName($name) {
        if (! isset($this->data->authorizations->permissions)) {
            return false;
        }

        foreach ($this->data->authorization->permissions as $permission) {
            if ($permission->resource_set_name == $name) {
                return true;
            }
        }

        return false;
    }

}